#!/bin/bash
var=/home/hassan/Documents/test.txt
if [[ -e $var ]]
then
echo "file exist"
else
echo "file not exist"
fi


(( 2<1 ))
echo "exit status is $?"

# /  $? the exit status of last command
# $? =  0 if the result of last command is non zero value

echo $$
# echo $$. The above command writes the PID of the current shell 

for n in {0..5}
do 
echo "BASH_VERSINFO[$] = ${BASH_VERSINFO[$n]}"
done

ROOT_UID=0
echo -n "You are: "

if [ "$UID" -eq "$ROOT_UID" ]
then
echo "root user"
else
echo " user "
fi

somefunction()
{
    echo "function name is $FUNCNAME"
}

somefunction

echo "OUTSIDE, \$FUNCNAME=$FUNCNAME"
# notica that $FUNCNAME equal null outside the function
echo "-------------------"
file="/home/hassan/Documents/wood"
 
echo "this line is redirected to $file " > $file
 echo "-------------------"

echo 12345 > fd.txt
exec 3<>fd.txt
read -n 2 <&3
echo -n . >&3
exec 3>&-
cat fd.txt

####-----
#!/bin/bash
# Let us assign the file descriptor to file for output
# fd # 3 is output file 
exec 3> /tmp/output.txt

# Executes echo commands and  # Send output to 
# the file descriptor (fd) # 3 i.e. write output to /tmp/output.txt
echo "This is a test" >&3

# Write date command output to fd # 3
date >&3

# Close fd # 3
exec 3<&-



